# ----------------------------------------------
# .... Imports
# ----------------------------------------------
library(readxl)
library(tseries)
library(ggplot2)
library(forecast)
library(seastests)
# Read data
data_path <- "~/RSpace/Datasources/Practicals_data.xls"
dataset <- read_excel(data_path)
attach(dataset)
# ----------------------------------------------
# .... Convert data to time series
# ----------------------------------------------
Temp = ts(Temperature, start=1960, end=2018, frequency=1)
Temp2= ts(Temperature, start=c(1960,1), frequency=12)
# ----------------------------------------------
# .... Working with temperature series
# ----------------------------------------------
BoxCox.lambda(Temp)
autoplot(Temp, main="Plot of Temperature Series", col="maroon", lwd=2)
adf.test(Temp)
pp.test(Temp)
kpss.test(Temp)
library(readxl)
library(tseries)
library(ggplot2)
library(forecast)
library(seastests)
# Read data
data_path <- "//mac/Home/Documents/_DataScienceHub/R/Datasources/Practicals_data.xls"
dataset <- read_excel(data_path)
attach(dataset)
Temp = ts(Temperature, start=1960, end=2018, frequency=1)
Temp2= ts(Temperature, start=c(1960,1), frequency=12)
BoxCox.lambda(Temp)
autoplot(Temp, main="Plot of Temperature Series", col="maroon", lwd=2)
adf.test(Temp)
pp.test(Temp)
kpss.test(Temp)
# ----------------------------------------------
# .... Imports
# ----------------------------------------------
library(readxl)
library(tseries)
library(ggplot2)
library(forecast)
#library(seastests)
# Read data
data_path <- "//mac/Home/Documents/_DataScienceHub/R/Datasources/Practicals_data.xls"
dataset <- read_excel(data_path)
attach(dataset)
# ----------------------------------------------
# .... Convert data to time series
# ----------------------------------------------
Temp = ts(Temperature, start=1960, end=2018, frequency=1)
Temp2= ts(Temperature, start=c(1960,1), frequency=12)
# ----------------------------------------------
# .... Working with temperature series
# ----------------------------------------------
BoxCox.lambda(Temp)
autoplot(Temp, main="Plot of Temperature Series", col="maroon", lwd=2)
adf.test(Temp)
pp.test(Temp)
kpss.test(Temp)
# ----------------------------------------------
# .... Working with differenced temperature series
# ----------------------------------------------
Temp_diff_1 = diff(Temp)
Temp_diff_1
autoplot(Temp_diff_1, main="Plot of First Temperature DifferencedSeries", col="maroon", lwd=2)
adf.test(Temp_diff_1)
pp.test(Temp_diff_1)
kpss.test(Temp_diff_1)
# ----------------------------------------------
# .... Plot of ACF and PACF
# ----------------------------------------------
Acf(Temp)
Pacf(Temp)
library(readxl)
library(tseries)
library(ggplot2)
library(forecast)
data_path = "//mac/Home/Documents/_DataScienceHub/R/Datasources/Practicals_data.xls"
dataframe = read_excel(data_path)
View(dataframe)
temp <- ts(Temperature)
temp2 <- ts(Temperature)
temp; temp2
temp; temp2
temp
#----------------------------------------------
# .... Temperature data starting from 1960
#----------------------------------------------
temp <- ts(Temperature, start=c(1960, 1), end=c(2018), frequency = 1); temp
#----------------------------------------------
# .... Temperature data starting from 1960
#----------------------------------------------
temp <- ts(Temperature, start=c(1960, 1), frequency = 1); temp
temp2 <- ts(Temperature, start=c(1960, 1), frequency = 12); temp2
temp <- ts(Temperature, start=c(1960, 1), frequency = 1); temp
temp2 <- ts(Temperature, start=c(1960, 1), frequency = 12); temp2
#----------------------------------------------
# .... Work with temp2
#----------------------------------------------
# Plot the series
plot(temp, main="Plot of Yearly Temperature Series", ylab="Tempeature", xlab="Year")
#----------------------------------------------
# .... Work with temp2
#----------------------------------------------
# Plot the series
autoplot(temp, main="Plot of Yearly Temperature Series", ylab="Tempeature", xlab="Year")
plot(temp, main="Plot of Yearly Temperature Series", ylab="Tempeature", xlab="Year", lwd=1.7, col="maroon")
plot(temp2, main="Plot of Monthly Temperature Series", ylab="Tempeature", xlab="Year", lwd=1.7, col="blue")
plot(temp, main="Plot of Yearly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.2, col="maroon")
plot(temp2, main="Plot of Monthly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.1, col="blue")
welch(temp2)
adf.test(temp2)
pp.test(temp2)
kpss.test(temp2)
#----------------------------------------------
# .... Temperature data starting from 1960
#----------------------------------------------
temp <- ts(Temperature, start=c(1960, 1), frequency = 1); temp
temp2 <- ts(Temperature, start=c(1960, 1), end=c(1964,1) frequency = 12); temp2
#----------------------------------------------
# .... Work with temp2
#----------------------------------------------
plot(temp2, main="Plot of Monthly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.1, col="blue")
welch(Temp2, freq=12) # no seasonality
adf.test(temp2)
pp.test(temp2)
kpss.test(temp2)
temp2 <- ts(Temperature, start=c(1960, 1), end=c(1964,1), frequency = 12); temp2
#----------------------------------------------
# .... Work with temp2
#----------------------------------------------
plot(temp2, main="Plot of Monthly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.1, col="blue")
adf.test(temp2)
pp.test(temp2)
kpss.test(temp2)
# Import modules
library(readxl)
library(tseries)
library(ggplot2)
library(forecast)
# Import dataset
data_path = "//mac/Home/Documents/_DataScienceHub/R/Datasources/Practicals_data.xls"
dataframe = read_excel(data_path)
attach(dataframe)
#----------------------------------------------
# .... Temperature data starting from 1960
#----------------------------------------------
temp <- ts(Temperature, start=c(1960, 1), frequency = 1)
temp2 <- ts(Temperature, start=c(1960, 1), frequency = 12);
#----------------------------------------------
# .... Work with temp2
#----------------------------------------------
plot(temp2, main="Plot of Monthly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.1, col="blue")
welch(Temp2, freq=12) # no seasonality
adf.test(temp2)
pp.test(temp2)
kpss.test(temp2)
#----------------------------------------------
# .... Work with temp
#----------------------------------------------
plot(temp, main="Plot of Yearly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.2, col="maroon")
adf.test(temp)
pp.test(temp)
kpss.test(temp)
ndiffs(temp2)
ndiffs(diff(temp2))
ndiffs(diff(diff(temp2)))
ndiffs(diff(diff(diff(diff(diff(temp2))))))
ndiffs(temp)
temp_diff <- diff(temp)
plot(temp_diff, main="Plot of Yearly Differenced Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.2, col="orange")
adf.test(temp_diff)
pp.test(temp_diff)
kpss.test(temp_diff)
# Use acf and pacf
Acf(temp)
# Use acf and pacf
Acf(temp, main="ACF plot of Year Temperature Series", lwd=1.9)
# Use acf and pacf
Acf(temp, main="ACF plot of Year Temperature Series", lwd=2.5)
# Use acf and pacf
Acf(temp, main="ACF plot of Year Temperature Series", lwd=2.5, col="maroon")
Acf(temp, main="ACF plot of Year Temperature Series", lwd=2.5, col="maroon")
Pacf(temp, main="PACF plot of Year Temperature Series", lwd=2.5, col="maroon")
# Build competing model
mauto -> auto.arima(temp); mauto
# Build competing model
mauto <- auto.arima(temp); mauto
auto.arima(temp, stepwise=FALSE)
mauto_3 <- auto.arima(temp, approximation = FALSE)
mauto_3
mauto_3
auto_3 <- auto.arima(temp, approximation = FALSE, stepwise = FALSE)
mauto_3
mauto_3 <- auto.arima(temp, approximation = FALSE, stepwise = FALSE)
mauto_3
# ARIMA(1,1,0) |
m1 <- Arima(temp, order=c(1,1,0)); m1
# ARIMA(2,1,0) |
m2 <- Arima(temp, order=c(2,1,0)); m2
# ARIMA(0,1,2) |
m3 <- Arima(temp, order=c(0,1,2)); m3
model
model <- m2
model
# Manipulate model
Arima(temp, order=c(2,1,0), include.constant = TRUE)
model
Arima(temp, order=c(2,1,0), include.constant = TRUE)
Arima(temp, order=c(2,1,0), include.drift = TRUE)
model
Arima(temp, order=c(2,1,0), include.mean = TRUE)
Arima(temp, order=c(2,1,0), include.drift = TRUE)
Arima(temp, order=c(2,1,0), method="ML")
Arima(temp, order=c(2,1,0), method="CSS")
model
Arima(temp, order=c(2,1,0), method="ML")
Arima(temp, order=c(2,1,0), method="CSS")
#----------------------------------------------
# .... Model diagnosis
#----------------------------------------------
checkresiduals(model)
View(dataframe)
#----------------------------------------------
# .... Work with temp
#----------------------------------------------
plot(temp, main="Plot of Yearly Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.2, col="maroon")
plot(temp_diff, main="Plot of Yearly Differenced Temperature Series", ylab="Tempeature", xlab="Year", lwd=2.2, col="orange")
